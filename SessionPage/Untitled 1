:::세션

- 쿠키가 웹 브라우저쪽에 상태를 유지하기 위한 정보를 저장한다면
세션은 '웹 서버쪽의 웹 컨테이너'에 상태를 유지하기 위한 정보를 저장

- javax.servlet.http 패키지의 HttpSession 인터페이스를 통해서
세션이 사용됨

- 웹컨테이너는 기본적으로 하나의 웹브라우저에 '하나씩' 세션을 생성함

- 세션은 웹 브라우저마다 따로 존재하기 때문에 웹브라우저 관련 1대1 정보를 저장함

- 서버와 관련된 정보를 노출시키지 않기 위해서 쿠키를 사용하는 것보다
HttpSession 인터페이스를 통한 세션의 상태를 관리하는 것이 더욱 효율적. 보안이 좋음

:::세션 생성하기
- 세션을 생성하기 위해서는 page directive의 session 속성을 true로 설정해주면 됨
그런데, session 속성의 default 값이 true이므로 별도의 지정을 하지 않아도 됨

<%@ page session="true"%>

:::세션 내장객체의 주요 메소드

- getId() : 세션의 고유ID값을 구함
- getCreationTime() : 세션이 생성되는 시간을 구함 
시간을 기준: 1970년 1월 1일 이후 시간을 의미하며 단위는 1/1000 초임
- getLastAccessedTime() : 웹 브라우저가 가장 마지막에 세션에 접근한 시간을 구함(long)

:::세션 속성 사용
- 한번 생성된 세션은 종료되기 전까지 지속적으로 유지
따라서 웹 어플리케이션을 실행하는 동안 지속적으로 사용하는 데이터의 저장 장소로서 세션을 사용

- 세션의 속성정보를 저장하고 불러오는 기능
setAttribute() : 세션 속성 저장
getAttribute() : 저장된 세션을 불러옴

:::세션 유지시간 설정 방법 두가지

//메소드로 설정하기(초단위)
1. session.setMaxInactiveInterval(초단위)

//web.xml 파일에서 설정하기(분단위)
2. 
	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>

	
	
	